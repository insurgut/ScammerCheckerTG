import streamlit as st

# Set page config must be the first Streamlit command
st.set_page_config(
    page_title="Telegram Analyzer",
    page_icon="üîç",
    layout="centered"
)

from event_loop import run_async
from styles import apply_styles
from auth import show_auth_page, TelegramAuth
from scam_checker import show_scam_checker_page

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'is_authenticated' not in st.session_state:
    st.session_state.is_authenticated = False
if 'check_result' not in st.session_state:
    st.session_state.check_result = None
if 'check_status' not in st.session_state:
    st.session_state.check_status = None
if 'check_message' not in st.session_state:
    st.session_state.check_message = None

# Apply custom styles
apply_styles()

def main():
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if 'auth' in st.session_state:
            st.session_state.is_authenticated = run_async(st.session_state.auth.check_auth())
            
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        if not st.session_state.is_authenticated:
            show_auth_page()
        else:
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–≤–µ—Ä–∫–∏ 
            show_scam_checker_page()
    except Exception as e:
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ
        if 'auth' in st.session_state:
            try:
                run_async(st.session_state.auth.disconnect())
            except:
                pass
            st.session_state.is_authenticated = False

        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        if st.button("–í–´–ô–¢–ò –ò–ó –ê–ö–ö–ê–£–ù–¢–ê"):
            if 'auth' in st.session_state:
                # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç API Telegram
                run_async(st.session_state.auth.disconnect())

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–µ—Å—Å–∏–∏ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                session_file_path = None
                if 'session_file_path' in st.session_state:
                    session_file_path = st.session_state.session_file_path

                # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
                for key in list(st.session_state.keys()):
                    del st.session_state[key]

                # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                if session_file_path:
                    st.session_state.last_session_file = session_file_path
                    st.info(f"–í–´–•–û–î –£–°–ü–ï–®–ù–û –í–´–ü–û–õ–ù–ï–ù.")
            else:
                # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
                for key in list(st.session_state.keys()):
                    del st.session_state[key]
                st.info("–í–´–•–û–î –£–°–ü–ï–®–ù–û –í–´–ü–û–õ–ù–ï–ù.")

            st.rerun()

        # –ù–∏–∂–Ω–∏–π –∫–æ–ª–æ–Ω—Ç–∏—Ç—É–ª
        st.markdown("---")
        st.markdown(
            """
            <div style="text-align: center; font-size: 1.4rem; margin-top: 2.5rem;">
            <div>TELEGRAM ANALYZER | –ú–û–©–ù–´–ô –ò–ù–°–¢–†–£–ú–ï–ù–¢ –î–õ–Ø –†–ê–°–®–ò–†–ï–ù–ù–û–ô –ê–ù–ê–õ–ò–¢–ò–ö–ò</div>
            <div style="margin-top: 1rem;">
                –°–û–ó–î–ê–ù–û –°–ü–ï–¶–ò–ê–õ–¨–ù–û –î–õ–Ø –ü–†–û–î–í–ò–ù–£–¢–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
            </div>
            </div>
            """,
            unsafe_allow_html=True
        )

if __name__ == "__main__":
    main()